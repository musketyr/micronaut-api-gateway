buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
        classpath "de.sebastianboegl.gradle.plugins:shadow-log4j-transformer:2.1.1"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.15"    }
}

configurations {
    lambda.extendsFrom runtime
    testCompile.extendsFrom lambda
}

group 'be.drissamri'
version '1.0-SNAPSHOT'

apply plugin:"io.spring.dependency-management"
apply plugin:"com.github.johnrengelman.shadow"
apply plugin:"application"
apply plugin:"de.sebastianboegl.shadow.transformer.log4j"
apply plugin:"java"
apply plugin:"net.ltgt.apt-eclipse"
apply plugin:"net.ltgt.apt-idea"

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:bom:1.0.0.M3'
    }
}
dependencies {
    annotationProcessor "io.micronaut:inject-java"

    lambda "com.agorapulse:micronaut-function-aws-agp:1.0.0.M3"
    compile "com.agorapulse:micronaut-http-server-basic:1.0.0.M3"
    compile "io.micronaut:http-server"
    compile "io.micronaut:router"

    compile "io.micronaut:inject"
    compile "io.micronaut:runtime"
    compileOnly "io.micronaut:inject-java"

    runtime "ch.qos.logback:logback-classic:1.2.3"

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "io.micronaut:inject-java"

}

shadowJar {
    mergeServiceFiles()
}

runShadow {
    // run in dev environment by default
    systemProperties 'micronaut.environments': 'dev'
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')
mainClassName = "be.drissamri.Application"
applicationDefaultJvmArgs = [""]

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.lambda
    }
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

compileJava.options.compilerArgs += '-parameters'
compileTestJava.options.compilerArgs += '-parameters'

build.dependsOn buildZip
